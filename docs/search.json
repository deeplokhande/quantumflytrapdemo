{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "This is a demo for Quantum Flytrap Summer Internship",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-03-05T21:46:34-05:00"
    },
    {
      "path": "index.html",
      "title": "Quantum FlyTrap Demo",
      "description": "Welcome to the demo. I hope you enjoy it!\n",
      "author": [],
      "contents": "\r\n\r\n\r\nAuthor: Deep Lokhande\r\nExample 0 Test Examples.\r\nThis section is included just to test if everthing loads properly.\r\nProceed to next section for actual submission.\r\nTest adding user defined vector.\r\n\r\n\r\n\r\nTest adding gates/operators.\r\n\r\n\r\n\r\nExample 1\r\nIn this example we will look at the simple case of effect of pauli gates (\\(H\\) and \\(X\\)) on initial state.\r\n\r\n\r\n\r\nExample 2\r\nIn this example we will look at matrix multiplication and tensor products of operators.\r\nInput Matrix\r\nThis is a user defined operator using Operator.fromArray() function.\r\nFor simplicity I have considered Hadamard Matrix, but an other matrix will work.\r\n\r\n\r\n\r\nExample of matrix multiplication \\(H \\cdot H = I\\)\r\nHere, we look at matrix multiplication between 2 Hadamard matrices.\r\nAs we know that Hadamard matrix is unitary matrix, multiplying this matrix with itself will result in Identity matrix.\r\n\r\n\r\n\r\nExample of tensor multiplication \\(H \\otimes I\\)\r\nHere, we look at tensor product of one Hadamard and Identity matrix.\r\nWe will observe the dimensionality increase in the output matrix, where tensor product between two \\(2 \\times 2\\) matrices, result in a \\(4 \\times 4\\) matrix.\r\n\r\n\r\n\r\nQuantum Teleportation\r\nIn this section, we will look at and example of Quantum Teleportation.\r\nThe initial state can be chosen by user as \\(|\\psi\\rangle = \\alpha |0\\rangle + \\beta |1\\rangle\\).\r\nFor simplicity here I chose \\(|\\psi\\rangle = |1\\rangle\\)\r\nThe steps in the teleportation are explained briefly in the value column of Ketlistviewer.\r\n\r\n\r\n\r\nHope the reviewer of this site will approve my work.\r\nLooking forward for working with you.\r\nLet me know if you need anything else regarding this project.\r\nContact Details:\r\nPhone: +1-(848)-252-0653\r\nEmail: deep.lokhande@rutgers.edu\r\nWebpage: deeplokhande.github.io\r\n\r\nTHANK YOU\r\n\r\n\r\nconst { Circuit,Gates, Vector,  Dimension,  Cx,  Operator } = QuantumTensors;\r\nconst { MatrixViewer, KetListViewer, KetViewer } = BraKetVue;\r\nconst rt2 = 1 / Math.sqrt(2);\r\n\r\n  \r\nfunction showKet(elName, vector) {\r\n  new Vue({\r\n    el: elName,\r\n    template: \"<ket-viewer :vector='vector' :dark-mode='false'/>\",\r\n    components: {\r\n      KetViewer,\r\n    },\r\n    data() {\r\n      return { vector }\r\n    }\r\n  })\r\n}\r\n\r\nfunction showMatrix(elName, operator) {\r\n  return new Vue({\r\n    el: elName,\r\n    template: \"<matrix-viewer :operator-raw='operator' :dark-mode='false'/>\",\r\n    components: {\r\n      MatrixViewer,\r\n    },\r\n    data() {\r\n      return { operator }\r\n    }\r\n  })\r\n}\r\n\r\nfunction showKetList(elName, list) {\r\n  return new Vue({\r\n    el: elName,\r\n    template: \"<ket-list-viewer :steps='list' :dark-mode='false'/>\",\r\n    components: {\r\n      KetListViewer,\r\n    },\r\n    data() {\r\n      return { list }\r\n    }\r\n  })\r\n}\r\n\r\n\r\n// Example 0 Code\r\n\r\nconst qtest = Vector.fromArray(\r\n  [Cx(1), Cx(0), Cx(2, 1), Cx(0, -1)],\r\n  [Dimension.qubit(), Dimension.qubit()]\r\n).normalize();\r\n\r\nshowKet('#qtest',qtest);\r\n\r\nshowMatrix('#op-h',Gates.H());\r\n\r\n// Example 1 Code\r\n\r\nconst qex1 = Vector.fromArray([Cx(1), Cx(0)], [Dimension.qubit()]).normalize();\r\n\r\nlet ex1=[\r\n  {\r\n    value: \"Initial State\",\r\n    vector: qex1,\r\n  },\r\n  {\r\n    value: \"After applying H gate on initial state\",\r\n    vector: Gates.H().mulVec(qex1),\r\n  },\r\n  {\r\n    value: \"After applying X gate on initial state\",\r\n    vector: Gates.X().mulVec(qex1),\r\n  },\r\n];\r\n\r\n\r\nshowKetList('#ex1',ex1);\r\n\r\n\r\n// Example 2 Code\r\n\r\n\r\nconst uin = Operator.fromArray(\r\n  [\r\n    [Cx(rt2), Cx(rt2)],\r\n    [Cx(rt2), Cx(-rt2)],\r\n  ],\r\n  [Dimension.qubit()]\r\n);\r\n\r\n\r\nlet ex2mul = uin.mulOp(uin);\r\nlet ex2ten = uin.outer(Gates.I());\r\n\r\n\r\nshowMatrix('#uin',uin);\r\n\r\nshowMatrix('#ex2mul',ex2mul);\r\n\r\nshowMatrix('#ex2ten', ex2ten);\r\n\r\n\r\n// Example 3 Code (TODO)\r\n\r\n\r\n\r\n// Quantum Teleportation\r\n\r\n\r\nconst circh = [];\r\nlet circ = Circuit.qubits(1)\r\n  // .applyGate(uin,0)\r\n  .X(0)\r\n  .saveTo(circh)\r\n  .addQubit()\r\n  .addQubit()\r\n  .H(1)\r\n  .CNOT(1, 2)\r\n  .saveTo(circh)\r\n  .CNOT(0, 1)\r\n  .H(0)\r\n  .saveTo(circh)\r\n  .CNOT(1,2)\r\n  .saveTo(circh)\r\n  .SWAP(0,2)\r\n  .saveTo(circh);\r\n\r\n// Following conditional statements could be used, but I choose different method to find the final answer.\r\n// if (circh[2].measureQubit(1)[1][\"probability\"] === 1) {\r\n//   circ.X(2);\r\n//   circ.saveTo(circh);\r\n// }\r\n// if (circh[2].measureQubit(0)[1][\"probability\"] === 1) {\r\n//   circ.Z(2);\r\n//   circ.saveTo(circh);\r\n// }\r\n\r\nlet a = circh[4].measureQubit(0)[0]['probability'];\r\nlet b = circh[4].measureQubit(0)[1]['probability'];\r\nlet outState = Vector.fromArray(\r\n      [Cx(a),Cx(b)],\r\n      [Dimension.qubit()],\r\n      removeZeros = 'false',\r\n    ).normalize(); \r\n\r\nlet qtp = [\r\n  { \r\n    value: \"Initial state to be teleported on 0th qubit\", \r\n    vector: circh[0].vector \r\n  },\r\n  {\r\n    value: \"Adding 2 more qubits and creating Bell Pair on 1st and 2nd qubit\",\r\n    vector: circh[1].vector,\r\n  },\r\n  {\r\n    value: \"Alice does operations on 0th and 1st qubit\",\r\n    vector: circh[2].vector,\r\n  },\r\n  {\r\n    value: \"Bob does corrective operations\",\r\n    vector: circh[3].vector,\r\n  },\r\n  {\r\n    value: \"Bob does corrective operations\",\r\n    vector: circh[4].vector,\r\n  },\r\n  {\r\n    value: \"The teleported state is\",\r\n    vector: outState,\r\n  },\r\n];\r\n\r\nshowKetList('#qtp',qtp);\r\n\r\n\r\n\r\n.matrix-viewer {\r\n  margin: auto;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-03-05T21:46:35-05:00"
    }
  ],
  "collections": []
}
